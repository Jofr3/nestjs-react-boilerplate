{"ast":null,"code":"import axios from 'axios';\nexport class UserApi {\n  static async getAll() {\n    const resp = await fetch('http://localhost:3000/users', {\n      method: 'GET'\n    });\n    return await resp.json();\n  }\n\n  static async add(data) {\n    const response = await axios.post(\"http://localhost:3000/users\", {\n      data\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  }\n\n  static async add1(data) {\n    const body = {\n      name: data.name,\n      surname: data.surname\n    };\n    return await fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json());\n  }\n\n}","map":{"version":3,"names":["axios","UserApi","getAll","resp","fetch","method","json","add","data","response","post","headers","add1","body","name","surname","JSON","stringify","then"],"sources":["/home/jofre/Desktop/React/test11/front/src/api/user.api.ts"],"sourcesContent":["import {UserDTO} from \"./dto/user.dto\";\nimport {AddUserDTO} from \"./dto/add-user.dto\";\nimport axios from 'axios';\n\nexport class UserApi {\n    public static async getAll(): Promise<UserDTO[]> {\n        const resp = await fetch('http://localhost:3000/users', {\n            method: 'GET'\n        })\n\n        return await resp.json();\n    }\n\n    public static async add(data: AddUserDTO) {\n        const response = await axios.post(\"http://localhost:3000/users\", {data}, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n\n        })\n        return response.data;\n    }\n\n    public static async add1(data: AddUserDTO) {\n        const body = {\n            name: data.name,\n            surname: data.surname,\n        }\n\n        return await fetch('http://localhost:3000/users', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(body)\n\n        }).then(response => response.json());\n    };\n\n}"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAN,CAAc;EACS,aAANC,MAAM,GAAuB;IAC7C,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;MACpDC,MAAM,EAAE;IAD4C,CAAhC,CAAxB;IAIA,OAAO,MAAMF,IAAI,CAACG,IAAL,EAAb;EACH;;EAEsB,aAAHC,GAAG,CAACC,IAAD,EAAmB;IACtC,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,6BAAX,EAA0C;MAACF;IAAD,CAA1C,EAAkD;MACrEG,OAAO,EAAE;QACL,gBAAgB;MADX;IAD4D,CAAlD,CAAvB;IAMA,OAAOF,QAAQ,CAACD,IAAhB;EACH;;EAEuB,aAAJI,IAAI,CAACJ,IAAD,EAAmB;IACvC,MAAMK,IAAI,GAAG;MACTC,IAAI,EAAEN,IAAI,CAACM,IADF;MAETC,OAAO,EAAEP,IAAI,CAACO;IAFL,CAAb;IAKA,OAAO,MAAMX,KAAK,CAAC,6BAAD,EAAgC;MAC9CC,MAAM,EAAE,MADsC;MAE9CM,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFqC;MAG9CE,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAHwC,CAAhC,CAAL,CAKVK,IALU,CAKLT,QAAQ,IAAIA,QAAQ,CAACH,IAAT,EALP,CAAb;EAMH;;AA/BgB"},"metadata":{},"sourceType":"module"}