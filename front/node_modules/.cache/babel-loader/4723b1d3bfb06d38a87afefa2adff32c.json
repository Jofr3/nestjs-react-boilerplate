{"ast":null,"code":"import axios from 'axios';\nexport class UserApi {\n  static async getAll() {\n    const resp = await fetch('http://localhost:3000/users', {\n      method: 'GET'\n    });\n    return await resp.json();\n  }\n\n  static async add(data) {\n    const resp = await axios({\n      url: 'http://localhost:3000/users',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: JSON.stringify(data)\n    }).then(function (res) {\n      console.log(res.data);\n    });\n  }\n\n  static async add1(data) {\n    return await fetch({\n      arrayBuffer() {\n        return Promise.resolve(undefined);\n      },\n\n      blob() {\n        return Promise.resolve(undefined);\n      },\n\n      bodyUsed: false,\n      cache: undefined,\n\n      clone() {\n        return undefined;\n      },\n\n      credentials: undefined,\n      destination: undefined,\n\n      formData() {\n        return Promise.resolve(undefined);\n      },\n\n      integrity: \"\",\n\n      json() {\n        return Promise.resolve(undefined);\n      },\n\n      keepalive: false,\n      mode: undefined,\n      redirect: undefined,\n      referrer: \"\",\n      referrerPolicy: undefined,\n      signal: undefined,\n\n      text() {\n        return Promise.resolve(\"\");\n      },\n\n      url: 'http://localhost:3000/users',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json());\n  }\n\n}","map":{"version":3,"names":["axios","UserApi","getAll","resp","fetch","method","json","add","data","url","headers","JSON","stringify","then","res","console","log","add1","arrayBuffer","Promise","resolve","undefined","blob","bodyUsed","cache","clone","credentials","destination","formData","integrity","keepalive","mode","redirect","referrer","referrerPolicy","signal","text","body","response"],"sources":["/home/jofre/Desktop/React/test11/front/src/api/user.api.ts"],"sourcesContent":["import {UserDTO} from \"./dto/user.dto\";\nimport {AddUserDTO} from \"./dto/add-user.dto\";\nimport axios from 'axios';\n\nexport class UserApi {\n    public static async getAll(): Promise<UserDTO[]> {\n        const resp = await fetch('http://localhost:3000/users', {\n            method: 'GET'\n        })\n\n        return await resp.json();\n    }\n\n    public static async add(data: AddUserDTO) {\n        const resp = await axios({\n            url: 'http://localhost:3000/users',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: JSON.stringify(data),\n        }).then(function (res) {\n            console.log(res.data);\n        });\n    }\n\n    public static async add1(data: AddUserDTO) {\n        return await fetch({\n            arrayBuffer(): Promise<ArrayBuffer> {\n                return Promise.resolve(undefined);\n            },\n            blob(): Promise<Blob> {\n                return Promise.resolve(undefined);\n            },\n            bodyUsed: false,\n            cache: undefined,\n            clone(): Request {\n                return undefined;\n            },\n            credentials: undefined,\n            destination: undefined,\n            formData(): Promise<FormData> {\n                return Promise.resolve(undefined);\n            },\n            integrity: \"\",\n            json(): Promise<any> {\n                return Promise.resolve(undefined);\n            },\n            keepalive: false,\n            mode: undefined,\n            redirect: undefined,\n            referrer: \"\",\n            referrerPolicy: undefined,\n            signal: undefined,\n            text(): Promise<string> {\n                return Promise.resolve(\"\");\n            },\n            url: 'http://localhost:3000/users',\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(data)\n\n        }).then(response => response.json());\n    };\n\n}"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAN,CAAc;EACS,aAANC,MAAM,GAAuB;IAC7C,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;MACpDC,MAAM,EAAE;IAD4C,CAAhC,CAAxB;IAIA,OAAO,MAAMF,IAAI,CAACG,IAAL,EAAb;EACH;;EAEsB,aAAHC,GAAG,CAACC,IAAD,EAAmB;IACtC,MAAML,IAAI,GAAG,MAAMH,KAAK,CAAC;MACrBS,GAAG,EAAE,6BADgB;MAErBJ,MAAM,EAAE,MAFa;MAGrBK,OAAO,EAAE;QACL,gBAAgB;MADX,CAHY;MAMrBF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IANe,CAAD,CAAL,CAOhBK,IAPgB,CAOX,UAAUC,GAAV,EAAe;MACnBC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,IAAhB;IACH,CATkB,CAAnB;EAUH;;EAEuB,aAAJS,IAAI,CAACT,IAAD,EAAmB;IACvC,OAAO,MAAMJ,KAAK,CAAC;MACfc,WAAW,GAAyB;QAChC,OAAOC,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAP;MACH,CAHc;;MAIfC,IAAI,GAAkB;QAClB,OAAOH,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAP;MACH,CANc;;MAOfE,QAAQ,EAAE,KAPK;MAQfC,KAAK,EAAEH,SARQ;;MASfI,KAAK,GAAY;QACb,OAAOJ,SAAP;MACH,CAXc;;MAYfK,WAAW,EAAEL,SAZE;MAafM,WAAW,EAAEN,SAbE;;MAcfO,QAAQ,GAAsB;QAC1B,OAAOT,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAP;MACH,CAhBc;;MAiBfQ,SAAS,EAAE,EAjBI;;MAkBfvB,IAAI,GAAiB;QACjB,OAAOa,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAP;MACH,CApBc;;MAqBfS,SAAS,EAAE,KArBI;MAsBfC,IAAI,EAAEV,SAtBS;MAuBfW,QAAQ,EAAEX,SAvBK;MAwBfY,QAAQ,EAAE,EAxBK;MAyBfC,cAAc,EAAEb,SAzBD;MA0Bfc,MAAM,EAAEd,SA1BO;;MA2Bfe,IAAI,GAAoB;QACpB,OAAOjB,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;MACH,CA7Bc;;MA8BfX,GAAG,EAAE,6BA9BU;MA+BfJ,MAAM,EAAE,MA/BO;MAgCfK,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAhCM;MAiCf2B,IAAI,EAAE1B,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAjCS,CAAD,CAAL,CAmCVK,IAnCU,CAmCLyB,QAAQ,IAAIA,QAAQ,CAAChC,IAAT,EAnCP,CAAb;EAoCH;;AA3DgB"},"metadata":{},"sourceType":"module"}